- name: test run
  hosts: localhost
  connection: local

  tasks:
    - name: Set name
      command: localectl set-keymap de
      become: yes
      become_user: root

    - name: full system upgrade
      pacman:
        update_cache: yes
        upgrade: yes
      become: yes
      become_user: root

    - name: Remove packages
      pacman:
        state: absent
        name:
          - dunstify
          - pcmanfm
          - palemoon-bin
          - manjaro-zsh-config
          - zsh-theme-powerlevel10k
      become: yes
      become_user: root

    - name: Install package
      pacman:
        state: present
        name:
          - task
          - apparmor
          - asciidoc
          - uthash
          - gcc
          - unzip
          - zip
          - obsidian
          - seahorse
          - jq
          - virtualbox-guest-utils
          - micro
          - xclip
          - fzf
          - feh
          - ranger
          - rofi
          - docker
          - docker-compose
          - zsh
          - zsh-completions
          - tilix
          - flameshot
          - peek
          - python-pygments
          - python-pywal
          - zsh-syntax-highlighting
      become: yes
      become_user: root

    - name: Copy ranger desktop
      ansible.builtin.copy:
        src: /home/dev/ranger.desktop
        dest: /usr/share/applications/ranger.desktop
      become: yes
      become_user: root

    - name: Creates pygment directory
      file:
        path: /usr/lib/python3.8/site-packages/pygments/styles/
        state: directory
      become: yes
      become_user: root

    - name: Copy pygment style
      ansible.builtin.copy:
        src: /home/dev/pygment_orchid.py
        dest: /usr/lib/python3.8/site-packages/pygments/styles/orchid.py
      become: yes
      become_user: root

    - name: Copy pygment init script
      ansible.builtin.copy:
        src: /home/dev/init.py
        dest: /usr/lib/python3.8/site-packages/pygments/styles/__init__.py
      become: yes
      become_user: root

    - name: Extract light theme
      ansible.builtin.unarchive:
        src: /home/dev/orchi.tar.xz
        dest: /usr/share/themes
      become: yes
      become_user: root

    - name: Extract dark theme
      ansible.builtin.unarchive:
        src: /home/dev/Nordian-Breeze-GTK.zip
        dest: /usr/share/themes
      become: yes
      become_user: root

    - name: change user shell to zsh
      become: yes
      user:
        name: "dev"
        shell: /bin/zsh

    - name: add user mod for docker
      command: sudo usermod -aG docker dev

    - name: start docker daemon
      command: sudo systemctl start docker.service

    - name: enable docker daemon for restart
      command: sudo systemctl enable docker.service

    - name: Download intellij Idea
      ansible.builtin.get_url:
        url: https://download.jetbrains.com/idea/ideaIU-2022.1.tar.gz
        dest: /home/dev/intellij.tar.gz
    - name: Download Pycharm
      ansible.builtin.get_url:
        url: https://download.jetbrains.com/python/pycharm-professional-2022.1.tar.gz
        dest: /home/dev/pycharm.tar.gz

    - name: Extract intellij
      ansible.builtin.unarchive:
        src: /home/dev/intellij.tar.gz
        dest: /home/dev
        list_files: yes
        creates: /home/dev/idea
      register: intellij_untar_content

    - name: Create intellij folder
      file:
        path: /home/dev/idea/
        state: directory

    - name: Move intellij installation
      command: cp -a /home/dev/{{ intellij_untar_content.files[0].split('/')[0] }}/. /home/dev/idea/
      when: intellij_untar_content.changed == True

    - name: Delete intellij installation
      command: rm -Rf /home/dev/{{ intellij_untar_content.files[0].split('/')[0] }}
      when: intellij_untar_content.changed == True

    - name: Extract Pycharm
      ansible.builtin.unarchive:
        src: /home/dev/pycharm.tar.gz
        dest: /home/dev
        list_files: yes
        creates: /home/dev/pycharm
      register: pycharm_untar_content

    - name: Create pycharm folder
      file:
        path: /home/dev/pycharm/
        state: directory

    - name: Move Pycharm installation
      command: cp -a /home/dev/{{ pycharm_untar_content.files[0].split('/')[0] }}/. /home/dev/pycharm/
      when: pycharm_untar_content.changed == True

    - name: Delete Pycharm installation
      command: rm -Rf /home/dev/{{ pycharm_untar_content.files[0].split('/')[0] }}
      when: pycharm_untar_content.changed == True

    - name: Create the `aur_builder` user
      become: yes
      ansible.builtin.user:
        name: aur_builder
        create_home: yes
        group: wheel

    - name: Allow the `aur_builder` user to run `sudo pacman` without a password
      become: yes
      ansible.builtin.lineinfile:
        path: /etc/sudoers.d/11-install-aur_builder
        line: 'aur_builder ALL=(ALL) NOPASSWD: /usr/bin/pacman'
        create: yes
        validate: 'visudo -cf %s'

    - name: Install packages using yay
      kewlfft.aur.aur:
        use: yay
        name:
          - ttf-sourcecodepro-nerd
          - google-chrome
          - postman-bin
          - rofi-greenclip
          - polybar-git
          - zsh-theme-powerlevel10k-git
      become: yes
      become_user: aur_builder

    - name: Cleanup files
      ansible.builtin.file:
        path: "{{ item }}"
        state: absent
      with_items:
        - /home/dev/pycharm.tar.gz
        - /home/dev/intellij.tar.gz
        - /home/dev/VBoxGuestAdditions.iso
        - /home/dev/README.md
        - /home/dev/Nordian-Breeze-GTK.zip
        - /home/dev/orchi.tar.xz
        - /home/dev/manjaro-update.sh
        - /home/dev/manjaro-additions.sh
        - /home/dev/init.py
        - /home/dev/ranger_desktop